<p>
  <%= radio_button_tag :fruit, '1' %>
  <%= label_tag 'ドラゴンフルーツ' %>
</p>

<p>
  <%= radio_button_tag :fruit, '2' %>
  <%= label_tag 'グァバ' %>
</p>

<p>
  <%= radio_button_tag :fruit, '3' %>
  <%= label_tag 'スターフルーツ' %>
</p>

<p id="content"></p>

pdf出力します
クリックするとPDFが出力される
<br>
<%= link_to "ここをクリック", vegetables_path(format: "pdf") %>
<br>

ここから下新しいAjax通信パターン

<%= form_with model: @vegetable, url: ajax_communication_path, class: "ajax_communication" do |f| %>
  <%= f.text_field :content %>
  <%= f.submit %>
<% end %>

<ul class="ajax_result"></ul>

<script>
    $(function () {
        // ラジオボタンを選択変更したら実行(.changeのこと)
        $('input[name="fruit"]').change(function () {
            // value値取得（radio_button_tagで生成されるHTMLのvalueを取りに行く詳細見たければchromeの開発者ツールとかで生成されているHTMLを確認してね）
            var val = $(this).val();
            // ajaxメソッド詳細知りたければググるべしほぼお作法通りに送ればよいだけ気を付けるのはdata: { fruit: { id: val } はハッシュの形になってることくらい
            $.ajax({
                type: 'GET',
                url: '/fruits/content',
                data: { fruit: { id: val } },
                dataType: 'json',  //json形式指定
                success:function(result){　// ここからはサーバー側（要はrails様）からのレスポンスがあり成功した場合の処理id="content"の中身に取得したresult.contentを入れてるだけ
                  $('#content').text(result.content);
                }
            });
        });
        $(document).on("ajax:success", ".ajax_communication", function(e) {
        var result = e.detail[0].content
        $(".ajax_result").append('<li>' + result + '</li>');
        });
    });
</script>